name: Node.js CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  id-token: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Check out repository code
      uses: actions/checkout@v2
    
    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '21'

    - name: Install dependencies
      run: npm ci

    - name: Build
      run: npm run build

    # Build and push the Docker image to Google Cloud Artifact Registry 
    - name: Authenticate, Build, Push Docker Image, and Deploy with Secrets
      if: github.ref == 'refs/heads/main'
      env:
        GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
        COINGECKO_API_KEY: ${{ secrets.COINGECKO_API_KEY }}
        SPREADSHEET_ID: ${{ secrets.SPREADSHEET_ID }}
        VALUE_INPUT_OPTION: ${{ secrets.VALUE_INPUT_OPTION }}
        NODE_RPC_HOST: ${{ secrets.NODE_RPC_HOST }}
        DOCKER_IMAGE: ${{ secrets.DOCKER_IMAGE }}
        GCP_POOL_ID: ${{ secrets.GCP_POOL_ID }}
        GCP_PROJECT: ${{ secrets.GCP_PROJECT }}
        GCP_PROJECT_NUMBER: ${{ secrets.GCP_PROJECT_NUMBER }}
        GCP_PROVIDER_ID: ${{ secrets.GCP_PROVIDER_ID }}
        GCP_REGION: ${{ secrets.GCP_REGION }}
        GCP_REPO: ${{ secrets.GCP_REPO }}
        GCP_SA_EMAIL: ${{ secrets.GCP_SA_EMAIL }}
        GCP_SA_NAME: ${{ secrets.GCP_SA_NAME }}
        GCP_SA_ROLE: ${{ secrets.GCP_SA_ROLE }}
        GALACTIC_MARKETPLACE_PROGRAM_ID: ${{ secrets.GALACTIC_MARKETPLACE_PROGRAM_ID }}
        PORT: ${{ secrets.PORT }}
      run: |
        echo "$GCP_SA_KEY" | gcloud auth activate-service-account --key-file=-
        gcloud auth configure-docker $GCP_REGION-docker.pkg.dev

        docker build -t $GCP_REGION-docker.pkg.dev/$GCP_PROJECT/$GCP_REPO/$DOCKER_IMAGE:${{ github.sha }} .
        docker push $GCP_REGION-docker.pkg.dev/$GCP_PROJECT/$GCP_REPO/$DOCKER_IMAGE:${{ github.sha }}

        # Update secrets in Google Cloud Secret Manager, skipping empty values
        for secret_name in COINGECKO_API_KEY SPREADSHEET_ID VALUE_INPUT_OPTION NODE_RPC_HOST DOCKER_IMAGE GCP_POOL_ID GCP_PROJECT GCP_PROJECT_NUMBER GCP_PROVIDER_ID GCP_REGION GCP_REPO GCP_SA_EMAIL GCP_SA_KEY_PATH GCP_SA_NAME GCP_SA_ROLE GALACTIC_MARKETPLACE_PROGRAM_ID PORT; do
          secret_value=$(eval echo "\$$secret_name")
          # Proceed only if secret_value is not empty
          if [[ ! -z "$secret_value" ]]; then
            # Check if the secret exists
            if gcloud secrets describe $secret_name --project=$GCP_PROJECT &>/dev/null; then
              # Add new version if the secret exists
              echo -n "$secret_value" | gcloud secrets versions add $secret_name --data-file=- --project=$GCP_PROJECT
            else
              # Create the secret if it does not exist
              echo -n "$secret_value" | gcloud secrets create $secret_name --data-file=- --replication-policy="automatic" --project=$GCP_PROJECT
            fi
          else
            echo "Skipping $secret_name because it is empty."
          fi
        done
        gcloud run deploy galactic-prices-gcloud-service --image $GCP_REGION-docker.pkg.dev/$GCP_PROJECT/$GCP_REPO/$DOCKER_IMAGE:${{ github.sha }} --add-cloudsql-instances $GCP_PROJECT:$GCP_REGION:instance --update-env-vars NODE_ENV=production --update-secrets COINGECKO_API_KEY=COINGECKO_API_KEY:latest,SPREADSHEET_ID=SPREADSHEET_ID:latest,VALUE_INPUT_OPTION=VALUE_INPUT_OPTION:latest,NODE_RPC_HOST=NODE_RPC_HOST:latest,DOCKER_IMAGE=DOCKER_IMAGE:latest,GCP_POOL_ID=GCP_POOL_ID:latest,GCP_PROJECT=GCP_PROJECT:latest,GCP_PROJECT_NUMBER=GCP_PROJECT_NUMBER:latest,GCP_PROVIDER_ID=GCP_PROVIDER_ID:latest,GCP_REGION=GCP_REGION:latest,GCP_REPO=GCP_REPO:latest,GCP_SA_EMAIL=GCP_SA_EMAIL:latest,GCP_SA_KEY_PATH=GCP_SA_KEY_PATH:latest,GCP_SA_NAME=GCP_SA_NAME:latest,GCP_SA_ROLE=GCP_SA_ROLE:latest,GALACTIC_MARKETPLACE_PROGRAM_ID=GALACTIC_MARKETPLACE_PROGRAM_ID:latest --platform managed --region $GCP_REGION --project $GCP_PROJECT

    # Deploy the image to Google Cloud Run
    - name: Deploy to Cloud Run
      if: github.ref == 'refs/heads/main'
      run: |
        gcloud run deploy galactic-prices-gcloud-service --image ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/${{ secrets.GCP_REPO }}/${{ secrets.DOCKER_IMAGE }}:${{ github.sha }} --platform managed --region ${{ secrets.GCP_REGION }} --project ${{ secrets.GCP_PROJECT }}