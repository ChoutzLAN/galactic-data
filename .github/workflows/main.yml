name: Node.js CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  id-token: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Check out repository code
      uses: actions/checkout@v2
    
    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '21'

    - name: Install dependencies
      run: npm ci

    - name: Build
      run: npm run build

    # Load .env file and set as GitHub Actions environment variables
    - name: Load .env file
      run: |
        while IFS='=' read -r key value; do
          if [[ ! $key == \#* ]]; then
            echo "$key=$value" >> $GITHUB_ENV
          fi
        done < .env

    # Authenticate with GCP and configure Docker
    - name: Setup GCP and Docker
      run: |
        echo "${{ secrets.GCP_SA_KEY }}" | gcloud auth activate-service-account --key-file=-
        gcloud auth configure-docker ${{ env.GCP_REGION }}-docker.pkg.dev

    # Build and Push Docker Image to Google Cloud Artifact Registry
    - name: Build and Push Docker Image
      run: |
        docker build -t ${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.GCP_ARTIFACT_REGISTRY_NAME }}/${{ env.DOCKER_IMAGE }}:${{ github.sha }} .
        docker push ${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.GCP_ARTIFACT_REGISTRY_NAME }}/${{ env.DOCKER_IMAGE }}:${{ github.sha }}

    # Deploy the image to Google Cloud Run
    - name: Deploy to Google Cloud Run
      run: |
        gcloud run deploy galactic-prices-gcloud-service --image ${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.GCP_ARTIFACT_REGISTRY_NAME }}/${{ env.DOCKER_IMAGE }}:${{ github.sha }} --add-cloudsql-instances ${{ env.GCP_PROJECT_ID }}:${{ env.GCP_REGION }}:instance --update-env-vars NODE_ENV=production --platform managed --region ${{ env.GCP_REGION }} --project ${{ env.GCP_PROJECT_ID }}
