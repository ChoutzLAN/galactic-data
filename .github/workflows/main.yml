name: Node.js CI/CD 
on: 
  push: 
    branches: [ main ] 
  pull_request: 
    branches: [ main ] 
permissions: 
  contents: read 
  id-token: write 
jobs: 
  build-and-deploy: 
    runs-on: ubuntu-latest 
    environment: galactic-data-production

    steps: 
    - name: Check out repository code 
      uses: actions/checkout@v2 
      
    - name: Set up Node.js 
      uses: actions/setup-node@v2 
      with: 
        node-version: '21' 

    # Ensure script has execute permissions
    - name: Grant execute permission for the script
      run: chmod +x ./scripts/extract-envs.sh

    # Extract and set environment variables from the .env file
    - name: Extract Environment Variables
      id: extract_envs
      run: ./scripts/extract-envs.sh
      shell: bash

    - name: Install dependencies 
      run: npm ci 

    - name: Build 
      run: npm run build 

    # Use dynamically set environment variables for the Docker and Cloud Run steps
    - name: Authenticate and Push Docker Image 
      if: github.ref == 'refs/heads/main' 
      run: |
        echo "${{ secrets.GCP_SA_KEY }}" | gcloud auth activate-service-account --key-file=-
        gcloud auth configure-docker ${{ secrets.GCP_REGION }}-docker.pkg.dev
        docker build -t ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_ARTIFACT_REGISTRY_NAME }}/${{ secrets.DOCKER_IMAGE }}:${{ github.sha }} .
        docker push ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_ARTIFACT_REGISTRY_NAME }}/${{ secrets.DOCKER_IMAGE }}:${{ github.sha }}

    # Additional steps as needed, using ${{ steps.extract_envs.outputs.VAR_NAME }} to access the variables
