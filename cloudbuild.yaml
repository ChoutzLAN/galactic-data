steps:
  # Step 1: Build the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/${_DOCKER_IMAGE}:$SHORT_SHA', '.']

  # Step 2: Push the Docker image to Google Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/${_DOCKER_IMAGE}:$SHORT_SHA']

  # Step 3: Setup and Initialize Terraform
  - name: 'hashicorp/terraform:latest'
    entrypoint: 'sh'
    args: ['-c', 'cd terraform && terraform init']
    env:
      - 'CLOUDSDK_CORE_PROJECT=$PROJECT_ID'
      - 'GOOGLE_APPLICATION_CREDENTIALS=${_GCP_SA_KEY_PATH_LOCAL}'

  # Step 4: Terraform Plan (Optional step for review)
  - name: 'hashicorp/terraform:latest'
    entrypoint: 'sh'
    args: ['-c', 'cd terraform && terraform plan']
    env:
      - 'CLOUDSDK_CORE_PROJECT=$PROJECT_ID'
      - 'GOOGLE_APPLICATION_CREDENTIALS=${_GCP_SA_KEY_PATH_LOCAL}'

  # Step 5: Terraform Apply
  - name: 'hashicorp/terraform:latest'
    entrypoint: 'sh'
    args: ['-c', 'cd terraform && terraform apply -auto-approve']
    env:
      - 'CLOUDSDK_CORE_PROJECT=$PROJECT_ID'
      - 'GOOGLE_APPLICATION_CREDENTIALS=${_GCP_SA_KEY_PATH_LOCAL}'

  # Step 6: Deploy to Google Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    args: [
      'run', 'deploy', '${_GCP_BUILD_DEPLOYMENT}',
      '--image', 'gcr.io/$PROJECT_ID/${_DOCKER_IMAGE}:$SHORT_SHA',
      '--region', '${_GCP_REGION}',
      '--platform', 'managed',
      '--allow-unauthenticated'
    ]
    env:
      - 'CLOUDSDK_CORE_PROJECT=$PROJECT_ID'

# Substitutions for custom variables
substitutions:
  _DOCKER_IMAGE: 'galactic-data-image'
  _GCP_SA_KEY_PATH_LOCAL: 'E:/PC-1_PROJECTS/galactic-data/keys/galactic-data-bd173651ac70.json'
  _GCP_BUILD_DEPLOYMENT: 'galactic-data-service'
  _GCP_REGION: 'australia-southeast1'

# Set the timeout for the build
timeout: '1200s' # Set to 20 minutes
