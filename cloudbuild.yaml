# cloudbuild.yaml
steps:
  - name: 'gcr.io/cloud-builders/gcloud'
    id: Retrieve Secrets
    entrypoint: 'bash'
    args:
    - '-c'
    - |
      echo "Retrieving secrets from Secret Manager..."
      gcloud secrets versions access latest --secret="GCP_SA_KEY" > env_vars/GCP_SA_KEY
      # Repeat the above command for each secret you need to retrieve
      # Then, if necessary, generate an .env file or export these as environment variables
      echo "Generating .env file from retrieved secrets..."
      echo "GCP_SA_KEY=$(cat env_vars/GCP_SA_KEY)" >> .env
  - name: gcr.io/cloud-builders/docker
    args:
      - build
      - '--no-cache'
      - '-t'
      - '$_AR_HOSTNAME/$PROJECT_ID/cloud-run-source-deploy/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA'
      - .
      - '-f'
      - Dockerfile
    id: Build
  - name: gcr.io/cloud-builders/docker
    args:
      - push
      - '$_AR_HOSTNAME/$PROJECT_ID/cloud-run-source-deploy/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA'
    id: Push
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:slim'
    args:
      - run
      - deploy
      - $_SERVICE_NAME
      - '--image=$_AR_HOSTNAME/$PROJECT_ID/cloud-run-source-deploy/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA'
      - '--region=$_DEPLOY_REGION'
      - '--platform=managed'
      - '--quiet'
    id: Deploy
    entrypoint: gcloud
images:
  - '$_AR_HOSTNAME/$PROJECT_ID/cloud-run-source-deploy/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA'
options:
  substitutionOption: ALLOW_LOOSE
  logging: CLOUD_LOGGING_ONLY
substitutions:
  _SERVICE_NAME: galactic-data-service-0
  _DEPLOY_REGION: australia-southeast1
  _AR_HOSTNAME: australia-southeast1-docker.pkg.dev
  _TRIGGER_ID: 114270a0-7680-4963-b30a-4878168375a0
  _PLATFORM: managed
tags:
  - gcp-cloud-build-deploy-cloud-run
  - gcp-cloud-build-deploy-cloud-run-managed
  - galactic-data-service-0
