# cloudbuild.yaml
steps:
  # Step 1: Build the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/${_DOCKER_IMAGE}:$SHORT_SHA', '.']

  # Step 2: Push the Docker image to Google Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/${_DOCKER_IMAGE}:$SHORT_SHA']

  # Step 3: Setup and Initialize Terraform
  - name: 'hashicorp/terraform:latest'
    entrypoint: 'sh'
    args: ['-c', 'cd terraform && terraform init']
    env:
      - 'CLOUDSDK_CORE_PROJECT=$PROJECT_ID'

  # Step 4: Terraform Plan
  - name: 'hashicorp/terraform:latest'
    entrypoint: 'sh'
    args: 
      - '-c'
      - |
        cd terraform && terraform plan \
          -var 'GCP_PROJECT_ID=$PROJECT_ID' \
          -var 'GCP_REGION=${_GCP_REGION}' \
          -var 'DOCKER_IMAGE=${_DOCKER_IMAGE}' \
          -var 'IMAGE_TAG=$SHORT_SHA'
    env:
      - 'CLOUDSDK_CORE_PROJECT=$PROJECT_ID'

  # Step 5: Terraform Apply
  - name: 'hashicorp/terraform:latest'
    entrypoint: 'sh'
    args: 
      - '-c'
      - |
        cd terraform && terraform apply -auto-approve \
          -var 'GCP_PROJECT_ID=$PROJECT_ID' \
          -var 'GCP_REGION=${_GCP_REGION}' \
          -var 'DOCKER_IMAGE=${_DOCKER_IMAGE}' \
          -var 'IMAGE_TAG=$SHORT_SHA'
    env:
      - 'CLOUDSDK_CORE_PROJECT=$PROJECT_ID'

  # Step 6: Deploy to Google Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args:
      - 'run'
      - 'deploy'
      - '${_GCP_BUILD_DEPLOYMENT}'
      - '--image=gcr.io/$PROJECT_ID/${_DOCKER_IMAGE}:$SHORT_SHA'
      - '--region=${_GCP_REGION}'
      - '--platform=managed'
      - '--allow-unauthenticated'
    env:
      - 'CLOUDSDK_CORE_PROJECT=$PROJECT_ID'

substitutions:
  _DOCKER_IMAGE: 'galactic-data-docker-image'
  _GCP_BUILD_DEPLOYMENT: 'galactic-data-service'
  _GCP_REGION: 'australia-southeast1'

timeout: '1800s' # Set to 30 minutes
